using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace EducationManagement
{
    public partial class ApplicationForm : Form
    {
        public string connectionString = ConfigurationSettings.AppSettings["connString"].ToString();
        public ApplicationForm()
        {
            InitializeComponent();
        }

        private void btnBack_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnEdit_Click(object sender, EventArgs e)
        {
            txtStudentId.Enabled = true;
            txtStudentId.Focus();
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            SaveData();
        }
        
        private void SaveData()
        {
            SqlConnection con = new SqlConnection(connectionString);
            SqlCommand com = new SqlCommand("INSERT INTO tblStudentNew VALUES(@StudentName, @Roll, @AdmissionDate)", con);            

            com.Parameters.Add("@StudentName", SqlDbType.NVarChar, 50);
            com.Parameters["@StudentName"].Value = txtStudentName.Text;

            com.Parameters.Add("@Roll", SqlDbType.Int);
            com.Parameters["@Roll"].Value = txtRoll.Text;

            com.Parameters.Add("@AdmissionDate", SqlDbType.DateTime);
            com.Parameters["@AdmissionDate"].Value = dtpAdmissionDate.Value;

            try
            {
                con.Open();
                com.ExecuteNonQuery();   
                MessageBox.Show("Saved Successfully.");
                ShowData();
                ClearData();
            }

            catch(Exception ex)
            {
                MessageBox.Show("Unsuccessfull !!!");
            }

            finally
            {
                con.Close();
            }
        }

        private void ClearData()
        {
            txtStudentName.Text = "";
            txtRoll.Text = "0";
            txtStudentId.Text = "";
        }

        private void btnUpdate_Click(object sender, EventArgs e)
        {
            UpdateData();
        }

        private void UpdateData()
        {
            SqlConnection con = new SqlConnection(connectionString);
            SqlCommand com = new SqlCommand("UPDATE tblStudentNew SET StudentName = @StudentName, Roll = @Roll, AdmissionDate = @AdmissionDate WHERE StudentId = @StudentId", con);

            com.Parameters.Add("@StudentName", SqlDbType.NVarChar, 50);
            com.Parameters["@StudentName"].Value = txtStudentName.Text;

            com.Parameters.Add("@Roll", SqlDbType.Int);
            com.Parameters["@Roll"].Value = txtRoll.Text;

            com.Parameters.Add("@AdmissionDate", SqlDbType.DateTime);
            com.Parameters["@AdmissionDate"].Value = dtpAdmissionDate.Value;

            com.Parameters.Add("@StudentId", SqlDbType.Int);
            com.Parameters["@StudentId"].Value = txtStudentId.Text;

            try
            {
                con.Open();
                com.ExecuteNonQuery();                
                MessageBox.Show("Updated Successfully.");                
                ShowData();
                ClearData();
            }

            catch(Exception ex)
            {
                MessageBox.Show("Unsuccessfully !!!");
            }

            finally
            {
                con.Close();
            }
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            DeleteData();
        }

        private void DeleteData()
        {
            SqlConnection con = new SqlConnection(connectionString);
            SqlCommand com = new SqlCommand("DELETE FROM tblStudentNew WHERE StudentId = @StudentId", con);

            com.Parameters.Add("@StudentId", SqlDbType.Int);
            com.Parameters["@StudentId"].Value = txtStudentId.Text;

            try
            {
                con.Open();
                com.ExecuteNonQuery();
                MessageBox.Show("Deleted Successfully.");
                ShowData();
                ClearData();
            }

            catch (Exception ex)
            {
                MessageBox.Show("Deleted Unuccessfully.");
            }

            finally {
                con.Close();
            }
        }

        private void ApplicationForm_Load(object sender, EventArgs e)
        {
            ShowData();
            LoadStudentId();
        }

        private void LoadStudentId()
        {
            cboStudentId.DataSource = null;
            cboStudentId.Items.Clear();

            SqlConnection con = new SqlConnection(connectionString);
            SqlDataAdapter com = new SqlDataAdapter("SELECT *FROM tblStudentNew", con);

            DataTable dt = new DataTable();
            com.Fill(dt);

            try
            {
                con.Open();

                cboStudentId.DisplayMember = "StudentId";
                cboStudentId.ValueMember = "StudentId";
                cboStudentId.DataSource = dt;
            }

            catch(Exception ex)
            {

            }

            finally
            {
                con.Close();
            }
        }

        private void ShowData()
        {
            StudentsGrid.AutoGenerateColumns = false;
            SqlConnection con = new SqlConnection(connectionString);
            SqlCommand com = new SqlCommand("SELECT *FROM tblStudentNew", con);

            DataTable dt = new DataTable();

            try
            {
                con.Open();
                com.ExecuteNonQuery();
                SqlDataAdapter sda = new SqlDataAdapter(com);
                sda.Fill(dt);
                StudentsGrid.DataSource = dt;
            }

            catch(Exception ex)
            {
                
            }

            finally
            {
                con.Close();
            }
        }

        private void StudentsGrid_Click(object sender, EventArgs e)
        {
            try
            {
                txtStudentId.Text = StudentsGrid.CurrentRow.Cells["StudentId"].Value.ToString();
                txtStudentName.Text = StudentsGrid.CurrentRow.Cells["StudentName"].Value.ToString();
                txtRoll.Text = StudentsGrid.CurrentRow.Cells["Roll"].Value.ToString();
                dtpAdmissionDate.Value = Convert.ToDateTime(StudentsGrid.CurrentRow.Cells["AdmissionDate"].Value.ToString());
            }

            catch(Exception ex)
            {

            }
        }

        private void btnSearch_Click(object sender, EventArgs e)
        {
            SearchDataUsingStudentId();
        }

        private bool SearchDataUsingStudentId()
        {
            bool ret = true;

            SqlConnection con = new SqlConnection(connectionString);
            SqlCommand com = new SqlCommand("SELECT *FROM tblStudentNew WHERE StudentId = @StudentId", con);

            com.Parameters.Add("@StudentId", SqlDbType.Int);
            com.Parameters["@StudentId"].Value = txtStudentId.Text;
            
            try
            {
                con.Open();
                SqlDataReader dr = com.ExecuteReader();
                if (dr.Read())
                {
                    txtStudentName.Text = dr["StudentName"].ToString();
                    txtRoll.Text = dr["Roll"].ToString();
                    dtpAdmissionDate.Value = Convert.ToDateTime(dr["AdmissionDate"].ToString());
                }
                else
                {
                    MessageBox.Show("Data Not Found !!!");
                }
            }

            catch(Exception ex)
            {

            }
            finally
            {
                con.Close();
            }

            return ret;
        }
    }
}
